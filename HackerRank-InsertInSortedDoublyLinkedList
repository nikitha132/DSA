#
# Complete the 'sortedInsert' function below.
#
# The function is expected to return an INTEGER_DOUBLY_LINKED_LIST.
# The function accepts following parameters:
#  1. INTEGER_DOUBLY_LINKED_LIST llist
#  2. INTEGER data
#

#
# For your reference:
#
# DoublyLinkedListNode:
#     int data
#     DoublyLinkedListNode next
#     DoublyLinkedListNode prev
#
#

def sortedInsert(llist, data):
    # Write your code here
    new_node = DoublyLinkedListNode(data)

    if not llist:
        return new_node

    current = llist

    # Find the correct position to insert the new node while maintaining the sorted order.
    while current.next and current.data < data:
        current = current.next

    if current.data >= data:
        # Insert before the current node.
        new_node.next = current
        new_node.prev = current.prev
        current.prev = new_node
        if new_node.prev:
            new_node.prev.next = new_node
            return llist
        # if inserted at first pos
        return new_node
    else:
        # Insert after the last node.
        new_node.prev = current
        current.next = new_node
        return llist