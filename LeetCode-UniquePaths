class Solution:
    #u would either go down or right to move from start of matrix to end
    def uniquePaths(self, m: int, n: int) -> int:
        dp = [[0] * n for _ in range(m)]
        for i in range(m):
            dp[i][0] = 1 # 1 way to go right,when there's no down
        for j in range(n):
            dp[0][j] = 1 # 1 way to go down,when there's no right
        for i in range(1, m):
            for j in range(1, n):
                dp[i][j] = dp[i - 1][j] + dp[i][j - 1] #choose down or right
        
        return dp[m - 1][n - 1]