class Solution:
    def topKFrequent(self, words: List[str], k: int) -> List[str]:
        freq_dict = Counter(words)
    
        # Create a max-heap (max-priority queue)
        max_heap = []
        
        for word, freq in freq_dict.items():
            # Push words onto the max-heap as tuples with (-frequency, word) so that we can maintain a max-heap based on frequency.
            # We also use the lexicographical order of the word as the secondary sorting key.
            heapq.heappush(max_heap, (-freq, word))
        
        result = [heapq.heappop(max_heap)[1] for _ in range(k)]
        
        return result