class Solution:
    def trap(self, height: List[int]) -> int:
        if not height:
            return 0
    
        n = len(height)
        left = 0
        right = n - 1
        left_max = 0
        right_max = 0
        water = 0
        #find the water accumulated behind curr_hieght till leftmax,if curr_height<left_max
        #find the water accumulated behind curr_hieght till rightmax,if curr_height<right_max
        while left < right:

            if height[left] < height[right]:
                if height[left] >= left_max:
                    left_max = height[left]
                else:
                    water += left_max - height[left]
                left += 1
            else:
                if height[right] >= right_max:
                    right_max = height[right]
                else:
                    water += right_max - height[right]
                right -= 1
        
        return water
